"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start –∏ /reset
"""
from aiogram import types, F, Router
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from database.database import async_session
from database.crud import get_user, delete_user_data
from keyboards.reply import get_main_keyboard

router = Router()


@router.message(Command("start"))
async def cmd_start(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await state.clear()

    async with async_session() as session:
        user = await get_user(session, str(message.from_user.id))

        if user:
            await message.answer(
                f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user.full_name}! üëã\n"
                "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é:",
                reply_markup=get_main_keyboard(True),
                parse_mode="HTML"
            )
        else:
            await message.answer(
                "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>MentorMatch</b>!\n\n"
                "–≠—Ç–æ –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –º–µ–Ω—Ç–æ—Ä–æ–≤ –∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.\n"
                "–ù–∞—á–Ω–∏—Ç–µ —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!",
                reply_markup=get_main_keyboard(False),
                parse_mode="HTML"
            )


@router.message(Command("reset"))
async def cmd_reset(message: types.Message, state: FSMContext):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–±—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)"""
    async with async_session() as session:
        if await delete_user_data(session, message.from_user.id):
            await message.answer(
                "‚úÖ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Å–±—Ä–æ—à–µ–Ω—ã. –ú–æ–∂–µ—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∑–∞–Ω–æ–≤–æ.",
                reply_markup=get_main_keyboard(False)
            )
        else:
            await message.answer("–ù–µ—á–µ–≥–æ —Å–±—Ä–∞—Å—ã–≤–∞—Ç—å.")
    await state.clear()